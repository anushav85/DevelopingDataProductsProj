View(gdpfed1)
?sort
library(plyr)
arrange(gdpfed1,desc(Gross.domestic.product.2012))
gdpfed1arr <- arrange(gdpfed1,desc(Gross.domestic.product.2012))
View(gdpfed1arr)
gdpfed1arr <- gdpfed1[order(gdpfed1$Gross.domestic.product.2012,decreasing = TRUE),]
View(gdpfed1arr)
gdpfed1arr
gdpfed1arr <- arrange(gdpfed1,desc(as.numeric(Gross.domestic.product.2012)))
View(gdpfed1arr)
gdpfed1$Gross.domestic.product.2012 <- as.numeric(gdpfed1$Gross.domestic.product.2012)
gdpfed1arr <- arrange(gdpfed1,desc(Gross.domestic.product.2012))
View(gdpfed1arr)
View(gdpfed1)
View(gdpfed)
View(gdpfed)
View(gdpfed1)
gdpfed1 <- gdpfed[gdpfed$Gross.domestic.product.2012 %in% 1:190,]
View(gdpfed1)
class(gdpfed1$Gross.domestic.product.2012)
?colNames
?colnames
colnames(gdpfed1$Gross.domestic.product.2012) <- c("Ranking")
names(gdpfed1)
names(gdpfed1[2])
names(gdpfed1[2]) <- c("Ranking")
names(gdpfed1)
colnames(gdpfed1[,2]) <- c("Ranking")
gdpfed1arr <- arrange(gdpfed1,desc(as.numeric(as.character(Gross.domestic.product.2012))))
View(gdpfed1arr)
View(gdp)
View(fed)
class(gdpfed1arr1$Income.Group)
class(gdpfed1arr$Income.Group)
class(gdpfed1arr$Gross.domestic.product.2012)
gdpfed1arr$Gross.domestic.product.2012 <- as.numeric(as.character(gdpfed1arr$Gross.domestic.product.2012))
class(gdpfed1arr$Gross.domestic.product.2012)
View(gdpfed1arr)
gdpfed1arr$Income.Group <- as.character(gdpfed1arr$Income.Group)
class(gdpfed1arr$Income.Group)
subset <- gdpfed1arr[gdpfed1arr$Income.Group == "High income: OECD" & gdpfed1arr$Income.Group == "High income: nonOECD"]
View(subset)
subset <- gdpfed1arr[gdpfed1arr$Income.Group == "High income: OECD" & gdpfed1arr$Income.Group == "High income: nonOECD",]
View(subset)
gdpfed1arr$Income.Group == "High income: OECD"
gdpfed1arr[gdpfed1arr$Income.Group == "High income: OECD",]
subset <- gdpfed1arr[gdpfed1arr$Income.Group == "High income: OECD"|gdpfed1arr$Income.Group =="High income: nonOECD",]
split(subset$Gross.domestic.product.12,subset$Income.Group)
split(subset$Gross.domestic.product.2012,subset$Income.Group)
sub1 <- split(subset$Gross.domestic.product.2012,subset$Income.Group)
mean(sub1)
sapply(sub1,mean)
library(Hmisc)
rankgrps <- cut(gdpfed1arr$Gross.domestic.product.2012,g=5)
rankgrps <- cut2(gdpfed1arr$Gross.domestic.product.2012,g=5)
table(rankgrps)
table(rankgrps,gdpfed1arr$Income.Group)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip",destfile="./data/GCDProj.zip")
?unzip
unzip(".data/GCDProj.zip")
unzip("./data/GCDProj.zip")
?file
?readLines
?file
unzip("./data/GCDProj.zip")
read.table("./subject_train.txt")
read.table("./UCI HAR Dataset/train/subject_train.txt")
dim(read.table("./UCI HAR Dataset/train/subject_train.txt"))
dim(read.table("./UCI HAR Dataset/test/subject_test.txt"))
dim(read.table("./UCI HAR Dataset/test/X_test.txt"))
dim(read.table("./UCI HAR Dataset/test/y_test.txt"))
dim(read.table("./UCI HAR Dataset/test/X_train.txt"))
dim(read.table("./UCI HAR Dataset/train/X_train.txt"))
dim(read.table("./UCI HAR Dataset/features.txt"))
feature <- (read.table("./UCI HAR Dataset/features.txt"))
View(feature)
y_test <- (read.table("./UCI HAR Dataset/test/y_test.txt"))
View(y_test)
sub_train <- (read.table("./UCI HAR Dataset/train/subject_train.txt"))
View(sub_train)
set.seed(1234)
par(mar = c(0,0,0,0))
x<- rnorm(12,mean = rep(1:3, each = 4),sd = 0.2)
y<- rnorm(12,mean = rep(c(1,2,1),each=4),sd=0.2)
plot(x,y,col="blue",pch=19,cex=2)
text(x+0.05,y+0.05,labels=as.character(1:12))
dataFrame <- data.frame(x=x,y=y)
dist(dataFrame)
set.seed(143)
dataMatrix <- as.matrix(dataFrame)[sample(1:12),]
heatmap(dataMatrix)
dataMatrix
?lines
?trellis.pair.set
?trellis.par.set
?llines
??llines
??trellis.par.set
help comment
help(comment)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
dim(read.table("./UCI HAR Dataset/test/X_train.txt"))
dim(read.table("./UCI HAR Dataset/train/X_train.txt"))
dim(read.table("./UCI HAR Dataset/test/X_test.txt"))
xtrain <- read.table("./UCI HAR Dataset/train/X_train.txt")
xtest <- read.table("./UCI HAR Dataset/test/X_test.txt")
merge1 <- rbind(xtest,xtrain)
View(merge1)
ytest <-  (read.table("./UCI HAR Dataset/test/y_test.txt"))
View(y_test)
colnames(ytest) <- c("Activity Name")
ytest
View(ytest)
ytrain <-  (read.table("./UCI HAR Dataset/train/y_train.txt"))
colnames(ytrain) <- c("Activity Name")
sub_train <- (read.table("./UCI HAR Dataset/train/subject_train.txt"))
colnames(ytrain) <- c("Activity ID")
colnames(ytest) <- c("Activity ID")
sub_test <- (read.table("./UCI HAR Dataset/test/subject_test.txt"))
colnames(sub_train) <- c("Subject ID")
colnames(sub_test) <- c("Subject ID")
feature <- (read.table("./UCI HAR Dataset/features.txt"))
View(feature)
feature[2]
class(feature[2])
class(feature[1])
class(feature[,2])
feature[,2] <- as.character(feature[,2])
class(feature[,2])
colnames(xtest) <- feature[,2]
colnames(xtrain) <- feature[,2]
View(xtest)
View(xtrain)
int1 <- cbind(sub_test,ytest)
inttest <- cbind(int1,xtest)
int2 <- cbind(sub_train,ytrain)
inttrain <- cbind(int2,xtrain)
initmerge_train_test <- rbind(inttrain,inttest)
View(initmerge_train_test)
mean_std <- ("mean"|"std") %in%  colnames(initmerge_train_test)
?%in%
?match
View(feature)
vect <- c("mean","std","Mean")
mean_std <- vect %in% colnames(initmerge_train_test)
mean_std
mean_std <- colnames(initmerge_train_test) %in% vect
mean_std
colnames(initmerge_train_test)
vect
match(vect,colnames(initmerge_train_test))
mean_std<-initmerge_train_test[,colnames(initmerge_train_test) %in% c("mean","Mean","std")]
mean_std
mean_std<-initmerge_train_test[,colnames(initmerge_train_test) %in% c("mean")]
mean_std
mean_std<-initmerge_train_test[,(colnames(initmerge_train_test) %in% c("mean"))]
mean_std
"mean" %in% colnames(initmerge_train_test)
x <- colnames(initmerge_train_test)
x
x[1]
charmatch("mean",x)
class(x)
charmatch("mean","getmean")
match("mean","getmean")
match("mean","mean2")
match("mean","mean")
charmatch("mean","meanww")
charmatch("mean","wwmean")
pmatch("mean","wwmean")
grep("mean",x)
grep1("mean",x)
grep("mean",feature[,2])
grepv<-grep("mean",feature[,2],ignore.case = TRUE,value = TRUE)
mean_std<-initmerge_train_test[,grepv]
grepv1<-grep("std",feature[,2],ignore.case = TRUE,value = TRUE)
grepv
mean_std2<-initmerge_train_test[,grepv1]
grep1
grepv1
meanstd_int <- cbind(initmerge_train_test[1:2],meanstd)
meanstd_int <- cbind(initmerge_train_test[1:2],mean_std)
meanstd_complete <- cbind(meanstd_int,mean_std1)
meanstd_complete <- cbind(meanstd_int,mean_std2)
?aggregate
?gsub
?gsub
?gsub
gsub("([ab]","\\1_\\1_","abc and ABC")
gsub("([ab])","\\1_\\1_","abc and ABC")
gsub("([ab])","\\1\\1","abc and ABC")
activity <- read.csv("./UCI HAR Dataset/activity_labels.txt")
View(activity)
activity <- as.data.frame(read.csv("./UCI HAR Dataset/activity_labels.txt"))
View(activity)
class(activity)
colnames(activity) <- "Activity labels"
View(activity)
activity
for (i= 1:5){}
for (i in 1:5){}
for (i in 1:5){activity[i+1]=activity[i]}
View(activity)
activity <- as.data.frame(read.csv("./UCI HAR Dataset/activity_labels.txt"))
View(activity)
for (i in 1:5){activity[i+1,]=activity[i,]}
View(activity)
colnames(activity) <- "Activity labels"
activity <- as.data.frame(read.table("./UCI HAR Dataset/activity_labels.txt"))
View(activity)
View(initmerge_train_test)
View(activity)
meanstd_complete1 <- meanstd_complete
View(meanstd_complete)
subset <- gsub(activity[,1],activity[,2],meanstd_complete1[,2])
?dcast
??dcast
subset <- gsub(activity[1,1],activity[1,2],meanstd_complete1[1,2])
subset
View(meanstd_complete1)
subset <- gsub(activity[1,1],activity[1,2],meanstd_complete1[,2])
View(meanstd_complete1)
subset
dcast(meanstd_complete1, gsub(activity[,1],activity[,2],meanstd_complete1[,2]))
install.packages("reshape2")
library(reshape2)
dcast(meanstd_complete1, gsub(activity[,1],activity[,2],meanstd_complete1[,2]))
?stringwidth
??stringwidth
?stringwith
??stringwith
gsub("([ab])","\\1\\1","abc and ABC")
gsub("([ab])","\\2\\2","abc and ABC")
gsub("([ab])","\\1\\1","abc and ABC")
gsub("([ab])","\\(\\)","abc and ABC")
gsub("([ab])","\\d\\e)","abc and ABC")
gsub("([ab])","\\d\\e","abc and ABC")
?replace
replace(c("a","b"),c("c","d"))
replace(c("a","b"),1:2,c("d,"e"))
replace(c("a","b"),1:2,c("d","e"))
unique(meanstd_complete1[,2])
sort(unique(meanstd_complete1[,2]))
replace(sort(unique(meanstd_complete1[,2])),1:10299,activity[,2]))
replace(sort(unique(meanstd_complete1[,2])),1:10299,activity[,2])
View(meanstd_complete1)
gsub("([ab])","\\d\\e","abc and ABC")
gsub("([ab])","\\d_\\e_","abc and ABC")
gsub("([ab])","\\1\\1","abc and ABC")
gsub("([abc]","\\1\\1\\1","abc and ABC")
gsub("([abc])","\\1\\1\\1","abc and ABC")
gsub("([abc])","\\1\\1","abc and ABC")
gsub("([abc])","1","abc and ABC")
?gsub
gsub("([abc])",c("1","2"),"abc and ABC")
gsub("([abc])","([xyz])","abc and ABC")
meanstd_complete1[,2]<-sapply(meanstd_complete1[,2],function(x){(activity[,2][match(x,activity[,1])])})
View(meanstd_complete1)
sum(is.na(meanstd_complete1[,2]))
colnames(meanstd_complete1[,2]) <- c("Activity")
class(meanstd_complete1[,2])
meanstd_complete1 <- as.character(meanstd_complete1[,2])
colnames(meanstd_complete1[,2]) <- c("Activity")
meanstd_complete1 <- as.data.frame(meanstd_complete1[,2])
class(meanstd_complete1[,1])
class(meanstd_complete1)
split(split(meanstd_complete1,meanstd_complete1[,1]),meanstd_complete1[,2])
split(meanstd_complete1,meanstd_complete1[,1])
split(meanstd_complete1,meanstd_complete1$Subject ID)
split(meanstd_complete1,meanstd_complete1$SubjectID)
meanstd_complete1[,1] <- as.data.frame(meanstd_complete1[,1])
meanstd_complete1<- as.data.frame(meanstd_complete1)
meanstd_complete1$SubjectID
meanstd_complete1$Subject ID
class(meanstd_complete1)
meanstd_complete1[,1] <- as.data.frame(meanstd_complete1[,1])
meanstd_complete1$SubjectID
meanstd_complete1$ActivityID
meanstd_complete1$Activity ID
meanstd_complete1$tBodyAcc-mean()-X
meanstd_complete1$"Activity ID"
class(meanstd_complete1[,1])
class(meanstd_complete[,2])
class(meanstd_complete1[,2])
(meanstd_complete1[,2])
class(meanstd_complete[,1])
meanstd_complete1 <- meanstd_complete
meanstd_complete1[,2]<-sapply(meanstd_complete1[,2],function(x){(activity[,2][match(x,activity[,1])])})
class(meanstd_complete1[,2])
class(meanstd_complete1[,1])
meanstd_complete1[,2] <- as.character(meanstd_complete1[,2])
class(meanstd_complete1[,2])
meanstd_complete1$SubjectID
class(meanstd_complete1[,1])
meanstd_complete1$Subject ID
meanstd_complete1[,1]
meanstd_complete1$tBodyAcc-mean()-X
class(meanstd_complete)
meanstd_complete$SubjectID
mean_std$SubjectID
initmerge_train_test$V1
class(initmerge_train_test)
?dcast
?dcast
?dcast
download.file("https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2FNEI_data.zip",destfile="./NEIdata.zip")
?readRDS
?aggregate
NEI <- readRDS("summarySCC_PM25.rds")
NEI <- readRDS(./NEIdata.zip/"summarySCC_PM25.rds")
unzip("./NEIdata.zip")
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
source('~/Coursera/run_analysis.R')
source('~/Coursera/run_analysis.R')
source('~/Coursera/run_analysis.R')
View(subject_activity_mean)
?gsub
source('~/Coursera/run_analysis.R')
View(subject_activity_mean)
source('~/Coursera/run_analysis.R')
View(subject_activity_mean)
?gsub
?append
append(colnames(subject_activity_mean[,3:563]),"Avg",after=length(colnames(subject_activity_mean[,3:563])))
View(subject_activity_mean)
source('~/Coursera/run_analysis.R')
View(subject_activity_mean)
?grep
write.table(meanstd_complete1,"./tidydataset1.txt",row.names=FALSE,col.names=TRUE,sep="\t")
read.table("./tidydataset1.txt")
output1 <- read.table("./tidydataset1.txt")
View(output1)
write.table(meanstd_complete1,"./tidydataset1.txt",row.names=FALSE,col.names=FALSE,sep="\t")
output1 <- read.table("./tidydataset1.txt")
View(output1)
write.table(meanstd_complete1,"./tidydataset1.txt",row.names=FALSE,col.names=TRUE,sep="\t")
output1 <- read.table("./tidydataset1.txt")
write.table(subject_activity_mean,"./dataset2.txt",row.names=FALSE,col.names=TRUE,sep="\t")
output2 <- read.table("./dataset2.txt")
View(output2)
write.table(subject_activity_mean,"./dataset2.txt",sep="\t")
output2 <- read.table("./dataset2.txt")
View(output2)
write.table(meanstd_complete1,"./tidydataset1.txt",sep="\t")
output1 <- read.table("./tidydataset1.txt")
View(output1)
install.packages("knitr")
write.table(subject_activity_mean,"./tidydataset2.txt",sep="\t")
output2 <- read.table("./tidydataset2.txt")
View(feature)
View(meanstd_complete1)
colnames(meanstd_complete1)
source('~/Coursera/run_analysis.R')
colnames(meanstd_complete1)
source('~/UCI HAR Dataset/run_analysis.R')
dim(read.table("./Gettingandcleaningdata/tidydataset1.txt"))
getwd()
setwd("C:/Users/anu")
dim(read.table("./Gettingandcleaningdata/tidydataset1.txt"))
NEI <- readRDS("summarySCC_PM25.rds")
setwd("~/")
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
View(NEI)
class(NEI$year)
source('~/.active-rstudio-document')
View(Emissions)
source('~/Exploratory Data Analysis Course Project 2/plot1.R')
source('~/Exploratory Data Analysis Course Project 2/plot2.R')
source('~/Exploratory Data Analysis Course Project 2/plot2.R')
require(ggplot2)
source('~/Exploratory Data Analysis Course Project 2/plot3.R')
source('~/Exploratory Data Analysis Course Project 2/plot4.R')
source('~/Exploratory Data Analysis Course Project 2/plot4.R')
source('~/Exploratory Data Analysis Course Project 2/plot4.R')
source('~/Exploratory Data Analysis Course Project 2/plot5.R')
source('~/Exploratory Data Analysis Course Project 2/plot5.R')
source('~/Exploratory Data Analysis Course Project 2/plot6.R')
source('~/Exploratory Data Analysis Course Project 2/plot6.R')
source('~/Exploratory Data Analysis Course Project 2/plot6.R')
?as.POSIXlt
mean(c(0,1,1,1,1,1))
?pvalue
??pvalue
data(mtcars)
fit <- lm(mpg ~ factor(cyl) + wt, mtcars)
summary(fit)
fit2 <- lm(mpg ~ factor(cyl), mtcars)
summary(fit2)
library(MASS)
?shuttle
data(shuttle)
str(shuttle)
names(shuttle)
?glm
fit <- glm(use ~ wind, family='binomial', shuttle)
exp(fit$coeff)
fit <- glm(use ~ wind + as.factor(magn), family='binomial', shuttle)
exp(fit$coeff)
data(shuttle)
logAutoLand<-glm(use~wind, data=shuttle,family="binomial")
summary(logAutoLand)
exp(logAutoLand$coeff)
logAutoLand2<-glm(use~wind+magn, data=shuttle,family="binomial")
exp(logAutoLand2$coeff)
data(shuttle)
library(data.table)
df<-data.table(shuttle[,c("use","wind")])
df[df$use=="auto",flag_1:=1]
df[df$use=="noauto",flag_1:=0]
df[df$use=="auto",flag_2:=0]
df[df$use=="noauto",flag_2:=1]
logAutoLand1<-glm(use~flag_1, data=df,family="binomial")
logAutoLand1$coeff
logAutoLand2<-glm(use~flag_2, data=df,family="binomial")
logAutoLand2$coeff
install.packages("data.table")
data(shuttle)
library(data.table)
df<-data.table(shuttle[,c("use","wind")])
df[df$use=="auto",flag_1:=1]
df[df$use=="noauto",flag_1:=0]
df[df$use=="auto",flag_2:=0]
df[df$use=="noauto",flag_2:=1]
logAutoLand1<-glm(use~flag_1, data=df,family="binomial")
logAutoLand1$coeff
logAutoLand2<-glm(use~flag_2, data=df,family="binomial")
logAutoLand2$coeff
data(InsectSprays)
glm1 <- glm(count~spray,family="poisson",data=InsectSprays)
1/exp(glm1$coeff)
t<-0:100
t2<-log(10)+t
count<-dpois(t*1000, lambda=3)
x<-sample(c(0,1), size=101, replace=TRUE)
df<-cbind(t,t2,x,count)
g1<-glm(count ~ x + offset(t), family = poisson)
g2<-glm(count ~ x + offset(t2), family = poisson)
g1$coeff
g2$coeff
x <- -5:5
y <- c(5.12, 3.93, 2.67, 1.87, 0.52, 0.08, 0.93, 2.05, 2.54, 3.87, 4.97)
plot(x,y)
x1<-x[7:11]
y1<-y[7:11]
fit<-lm(y1~x1)
summary(fit)
fit <- glm(use ~ wind + as.factor(magn), family='binomial', shuttle)
exp(fit$coeff)
install.packages("caret")
install.packages("doMC")
install.packages("doMC")
install.packages("RANN")
install.packages("randomForest")
install.packages("e1071")
library(e1071)
install.packages("e1071")
training_pred <- predict(rf_model, ptraining)
print(confusionMatrix(training_pred, ptraining$classe))
```
The in sample accuracy is 100% which indicates, the model does not suffer from bias.
### Out-of-sample accuracy
```{r}
testing_pred <- predict(rf_model, ptesting)
install.packages("doParallel")
demo(googleVis)
demo(googlevis)
library(googleVis)
install.packages("googleVis")
library(googleVis)
demo(googleVis)
shiny::runApp('C:/Users/anu/Developing Data Products Proj')
setwd("C:/Users/anu/Developing Data Products Proj/test")
shiny::runApp()
shiny::runApp('C:/Users/anu/Developing Data Products Proj')
shiny::runApp('C:/Users/anu/Developing Data Products Proj')
shiny::runApp('C:/Users/anu/Developing Data Products Proj')
shiny::runApp('C:/Users/anu/Developing Data Products Proj')
shiny::runApp('C:/Users/anu/Developing Data Products Proj')
shiny::runApp('C:/Users/anu/Developing Data Products Proj')
shiny::runApp('C:/Users/anu/Developing Data Products Proj')
shiny::runApp('C:/Users/anu/Developing Data Products Proj')
shiny::runApp('C:/Users/anu/Developing Data Products Proj')
shiny::runApp('C:/Users/anu/Developing Data Products Proj')
install.packages("shinyapps")
library(shinyapps)
install.packages("shinyapp")
library(devtools)
devtools::install_github('rstudio/shinyapps')
library(shinyapps)
deployApp()
shinyapps::setAccountInfo(name='anushav85', token='8F7BD8CD075171696F9A659BE13F3A1B', secret='C1SJwnVAys8mPYpeBxOxy8Nb4BjSXayqud91s2SW')
library(shinyapps)
deployApp()
setwd("C:/Users/anu/Developing Data Products Proj")
deployApp()
setwd("C:/Users/anu/DevelopingDataProductsProj")
library(shinyapps)
deployApp()
setwd("C:/Users/anu/DevelopingDataProductsProj/New folder")
library(devtools)
library(slidify)
install.packages("slidify")
install_github("slidify","ramnathv")
install_github("slidifylibraries", "ramnathv")
library(slidify)
author("DevelopingDataProductsProj")
publish(user = anushav85, repo = DevelopingDataProductsProj)
publish(user = "anushav85", repo = "DevelopingDataProductsProj")
